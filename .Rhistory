out <- prepDocuments(tx$documents, tx$vocab, tx$meta, lower.thresh=15)
# 3. Setting up the STM
docs <- out$documents
# 4. Setting up the STM
vocab <- out$vocab
# Mona wants to see
head(vocab)
# 5. Setting up the STM
meta <-out$meta
# Step 1: Estimate topics and prevalence from abstracts as a function of binary gender,
# controlling for school and year
K <- 61
fit <- stm(out$documents, out$vocab, K =K,
prevalence =~ woman.strict+as.factor(School)+s(year), max.em.its = 100,
data = meta, init.type = "Spectral")
# These are the labels we assigned to the topics on the basis of the frex (Frequent-Exclusive) words from the model.
# The topics themselves are just our shorthand, and people can interpret the topics any way they'd like (within reason).
# labeled.topics <- read.csv("frex-8-24.csv",stringsAsFactors=F)
labeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
labeled.topics <- labeled.topics$label
# MP my file (2 columns) and theirs (8 columns) differ in structure, it will create a different sort
#MPlabeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
#MPlabeled.topics <- MPlabeled.topics$label
# # If you rerun the model, check to make sure the order still lines up -- it should, but if it doesn't, need to reorder
#summary(fit)$frex==labeled.topics[,2:8]s
frex <- apply(summary(fit)$frex,1,paste0,collapse=",")
# Extracts the regression tables.
tabs <- summary(prep)$tables
# Runs a series of linear regressions.
#  prep <- estimateEffect(1:length(subfields) ~ woman.strict+as.factor(School)+s(year), fit,
prep <- estimateEffect(  ~ woman.strict+as.factor(School)+s(year), fit,
meta = out$meta, uncertainty = "Global")
# Extracts the regression tables.
tabs <- summary(prep)$tables
# Extracts the coefficient for "woman" from each regression table.
sig <- data.frame()
for(i in 1:length(summary(prep)$tables)){
sig <- rbind(sig,data.frame(topic=frex[i],shorttopic=labeled.topics[i],t(tabs[[i]][2,])))
}
names(sig) <- c("topic","shorttopic","coefficient","stderr","t","p")
sig <- sig[order(sig$coefficient),]
# Indicates whether the coefficient is positive and significant or negative and significant
# (A relic of when we were basing the color on the significance for ease of viewing.)
sig$positive <- ifelse(sig$coefficient>0 & sig$p<=.05,1,0)
sig$negative <- ifelse(sig$coefficient<0 & sig$p<=.05,1,0)
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
#Monica inserted code to make sure that stm object "fit" contains the same topics as
#file output-for-figure.csv: Yes.
summary(fit)
summary(head(fit))
fit_frex <- summary(fit)$frex
summary(fit)
# Runs a series of linear regressions.
#  prep <- estimateEffect(1:length(subfields) ~ woman.strict+as.factor(School)+s(year), fit,
prep <- estimateEffect( 61 ~ woman.strict+as.factor(School)+s(year), fit,
meta = out$meta, uncertainty = "Global")
# Runs a series of linear regressions.
#  prep <- estimateEffect(1:length(subfields) ~ woman.strict+as.factor(School)+s(year), fit,
prep <- estimateEffect(  ~ woman.strict+as.factor(School)+s(year), fit,
meta = out$meta, uncertainty = "Global")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
#use eval = FALSE for just knitting
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
#use eval = FALSE for just knitting
knitr::opts_chunk$set(echo = TRUE, eval = TRUE)
#use eval = FALSE for just knitting
#setwd("C:/Users/Jane Sumner/Dropbox/Gendered Research Agendas")
#commented Line 1 and replaced the hard path with here()
#install.packages("here")
library(here)
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
#install.packages(c("SnowballC", "stm", "tm"))
library(stringr)
library(stm)
library(SnowballC)
library(tm)
#install.packages(c("Rtsne", "rsvd", "geometry"))
# message: also installing the dependencies ‘abind’, ‘magic’, ‘lpSolve’, ‘linprog’, ‘RcppProgress’
library(Rtsne)
library(rsvd)
library(geometry)
#diss_test <- read.csv(here("data", "dissertation-data-clean.csv"))
#rm(diss_test)
diss <- read.csv(here("data", "dissertation-data-clean.csv"), stringsAsFactors=F)
# Not exactly Figure A1, because the replication data is subset to only the data we used in the analysis,
# but it conveys similar information.
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light blue",
breaks=seq(1999.5,2013.5,1),xlab="year")
# Made histogram smaller, then changed to both "FD" and 13 bars, one bar for each year but the largest
# change is observable, only on first year so I understand why the kept it from half year to the next
#knitr::opts_chunk$set(fig.width=6, fig.height=4)
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light green",
breaks=13,xlab="year")
# Dichotomous coding of author gender, both loose (Pr(woman)>.5 => "woman") and  "woman",
# strict (Pr(woman)>=.7 => Pr(woman)<=.3 => "man").
table(diss$woman.loose,useNA="always")
round(table(diss$woman.loose,useNA="always")/sum(table(diss$woman.loose,
useNA="always")),3)
table(diss$woman.strict,useNA="always")
round(table(diss$woman.strict,useNA="always")/sum(table(diss$woman.strict,
useNA="always")),3)
#proportional difference between published paper and replication results with final dataset.
#use results from above in an object to recalculate the 10% dii?
sum(table(diss$woman.strict,useNA="always"))
659+973+176
# this addition is 1808, less 176 is still higher than the 1543. percentages are ok though. #what to do?
x = 36.4+53.8+9.7
x
# Figure A2 in Supplementary Online Appendices
barplot(t(table(diss$year,diss$woman.strict)), col = c("lightblue", "mistyrose",
"lightcyan", "lavender"), legend.text=c("Man","Woman"),
main="Dissertations Filed With Proquest Per Year\nand Gender",ylim=c(0,250),
border = "dark blue")
# 1. Setting up the STM
tx <- textProcessor(diss$Abstract,meta=diss)
# 2. Setting up the STM
out <- prepDocuments(tx$documents, tx$vocab, tx$meta, lower.thresh=15)
# 3. Setting up the STM
docs <- out$documents
# 4. Setting up the STM
vocab <- out$vocab
# Mona wants to see
head(vocab)
# 5. Setting up the STM
meta <-out$meta
# These are the labels we assigned to the topics on the basis of the frex (Frequent-Exclusive) words from the model.
# The topics themselves are just our shorthand, and people can interpret the topics any way they'd like (within reason).
# labeled.topics <- read.csv("frex-8-24.csv",stringsAsFactors=F)
labeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
labeled.topics <- labeled.topics$label
# MP my file (2 columns) and theirs (8 columns) differ in structure, it will create a different sort
#MPlabeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
#MPlabeled.topics <- MPlabeled.topics$label
# # If you rerun the model, check to make sure the order still lines up -- it should, but if it doesn't, need to reorder
#summary(fit)$frex==labeled.topics[,2:8]s
frex <- apply(summary(fit)$frex,1,paste0,collapse=",")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, eval = TRUE)
#use eval = FALSE for just knitting
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, eval = TRUE)
#use eval = FALSE for just knitting
#setwd("C:/Users/Jane Sumner/Dropbox/Gendered Research Agendas")
#commented Line 1 and replaced the hard path with here()
#install.packages("here")
library(here)
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
#install.packages(c("SnowballC", "stm", "tm"))
library(stringr)
library(stm)
library(SnowballC)
library(tm)
#install.packages(c("Rtsne", "rsvd", "geometry"))
# message: also installing the dependencies ‘abind’, ‘magic’, ‘lpSolve’, ‘linprog’, ‘RcppProgress’
library(Rtsne)
library(rsvd)
library(geometry)
#diss_test <- read.csv(here("data", "dissertation-data-clean.csv"))
#rm(diss_test)
diss <- read.csv(here("data", "dissertation-data-clean.csv"), stringsAsFactors=F)
# Not exactly Figure A1, because the replication data is subset to only the data we used in the analysis,
# but it conveys similar information.
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light blue",
breaks=seq(1999.5,2013.5,1),xlab="year")
# Made histogram smaller, then changed to both "FD" and 13 bars, one bar for each year but the largest
# change is observable, only on first year so I understand why the kept it from half year to the next
#knitr::opts_chunk$set(fig.width=6, fig.height=4)
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light green",
breaks=13,xlab="year")
# Dichotomous coding of author gender, both loose (Pr(woman)>.5 => "woman") and  "woman",
# strict (Pr(woman)>=.7 => Pr(woman)<=.3 => "man").
table(diss$woman.loose,useNA="always")
round(table(diss$woman.loose,useNA="always")/sum(table(diss$woman.loose,
useNA="always")),3)
table(diss$woman.strict,useNA="always")
round(table(diss$woman.strict,useNA="always")/sum(table(diss$woman.strict,
useNA="always")),3)
#proportional difference between published paper and replication results with final dataset.
#use results from above in an object to recalculate the 10% dii?
sum(table(diss$woman.strict,useNA="always"))
659+973+176
# this addition is 1808, less 176 is still higher than the 1543. percentages are ok though. #what to do?
x = 36.4+53.8+9.7
x
# Figure A2 in Supplementary Online Appendices
barplot(t(table(diss$year,diss$woman.strict)), col = c("lightblue", "mistyrose",
"lightcyan", "lavender"), legend.text=c("Man","Woman"),
main="Dissertations Filed With Proquest Per Year\nand Gender",ylim=c(0,250),
border = "dark blue")
# 1. Setting up the STM
tx <- textProcessor(diss$Abstract,meta=diss)
# 2. Setting up the STM
out <- prepDocuments(tx$documents, tx$vocab, tx$meta, lower.thresh=15)
# 3. Setting up the STM
docs <- out$documents
# 4. Setting up the STM
vocab <- out$vocab
# Mona wants to see
head(vocab)
# 5. Setting up the STM
meta <-out$meta
# These are the labels we assigned to the topics on the basis of the frex (Frequent-Exclusive) words from the model.
# The topics themselves are just our shorthand, and people can interpret the topics any way they'd like (within reason).
# labeled.topics <- read.csv("frex-8-24.csv",stringsAsFactors=F)
labeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
labeled.topics <- labeled.topics$label
# MP my file (2 columns) and theirs (8 columns) differ in structure, it will create a different sort
#MPlabeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
#MPlabeled.topics <- MPlabeled.topics$label
# # If you rerun the model, check to make sure the order still lines up -- it should, but if it doesn't, need to reorder
#summary(fit)$frex==labeled.topics[,2:8]s
frex <- apply(summary(fit)$frex,1,paste0,collapse=",")
# 3. Setting up the STM
docs <- out$documents
view docs
vied("docs")
view("docs")
View(docs)
docs[["1"]]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, eval = TRUE)
#use eval = FALSE for just knitting
#setwd("C:/Users/Jane Sumner/Dropbox/Gendered Research Agendas")
#commented Line 1 and replaced the hard path with here()
#install.packages("here")
library(here)
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
#install.packages(c("SnowballC", "stm", "tm"))
library(stringr)
library(stm)
library(SnowballC)
library(tm)
#install.packages(c("Rtsne", "rsvd", "geometry"))
# message: also installing the dependencies ‘abind’, ‘magic’, ‘lpSolve’, ‘linprog’, ‘RcppProgress’
library(Rtsne)
library(rsvd)
library(geometry)
diss <- read.csv(here("data", "dissertation-data-clean.csv"), stringsAsFactors=F)
# Not exactly Figure A1, because the replication data is subset to only the data we used in the analysis,
# but it conveys similar information.
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light blue",
breaks=seq(1999.5,2013.5,1),xlab="year")
# Made histogram smaller, then changed to both "FD" and 13 bars, one bar for each year but the
# largest change is observable, only on first year so I understand why the kept it from half
# year to the next
hist(diss$year,main="Dissertations Filed with Proquest\nby Year",col="light green",
breaks=13,xlab="year")
# Dichotomous coding of author gender, both loose (Pr(woman)>.5 => "woman") and  "woman",
# strict (Pr(woman)>=.7 => Pr(woman)<=.3 => "man").
table(diss$woman.loose,useNA="always")
round(table(diss$woman.loose,useNA="always")/sum(table(diss$woman.loose,
useNA="always")),3)
table(diss$woman.strict,useNA="always")
round(table(diss$woman.strict,useNA="always")/sum(table(diss$woman.strict,
useNA="always")),3)
#proportional difference between published paper and replication results with final dataset.
#use results from above in an object to recalculate the 10% dii?
sum(table(diss$woman.strict,useNA="always"))
659+973+176
# this addition is 1808, less 176 is still higher than the 1543. percentages are ok though. #what to do?
x = 36.4+53.8+9.7
x
# Figure A2 in Supplementary Online Appendices
barplot(t(table(diss$year,diss$woman.strict)), col = c("lightblue", "mistyrose",
"lightcyan", "lavender"), legend.text=c("Man","Woman"),
main="Dissertations Filed With Proquest Per Year\nand Gender",ylim=c(0,250),
border = "dark blue")
# 1. Setting up the STM
tx <- textProcessor(diss$Abstract,meta=diss)
# 2. Setting up the STM
out <- prepDocuments(tx$documents, tx$vocab, tx$meta, lower.thresh=15)
# 3. Setting up the STM
docs <- out$documents
# 4. Setting up the STM
vocab <- out$vocab
# Mona wants to see
head(vocab)
# 5. Setting up the STM
meta <-out$meta
# Step 1: Estimate topics and prevalence from abstracts as a function of binary gender,
# controlling for school and year
K <- 61
fit <- stm(out$documents, out$vocab, K =K,
prevalence =~ woman.strict+as.factor(School)+s(year), max.em.its = 100,
data = meta, init.type = "Spectral")
#Monica inserted code to make sure that stm object "fit" contains the same topics as
#file output-for-figure.csv: Yes.
summary(fit)
summary(head(fit))
fit_frex <- summary(fit)$frex
# These are the labels we assigned to the topics on the basis of the frex (Frequent-Exclusive) words from the model.
# The topics themselves are just our shorthand, and people can interpret the topics any way they'd like (within reason).
# labeled.topics <- read.csv("frex-8-24.csv",stringsAsFactors=F)
labeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
labeled.topics <- labeled.topics$label
# MP my file (2 columns) and theirs (8 columns) differ in structure, it will create a different sort
#MPlabeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
#MPlabeled.topics <- MPlabeled.topics$label
# # If you rerun the model, check to make sure the order still lines up -- it should, but if it doesn't, need to reorder
#summary(fit)$frex==labeled.topics[,2:8]s
frex <- apply(summary(fit)$frex,1,paste0,collapse=",")
# Runs a series of linear regressions.
#  prep <- estimateEffect(1:length(subfields) ~ woman.strict+as.factor(School)+s(year), fit,
prep <- estimateEffect(  ~ woman.strict+as.factor(School)+s(year), fit,
meta = out$meta, uncertainty = "Global")
# Extracts the regression tables.
tabs <- summary(prep)$tables
# Extracts the coefficient for "woman" from each regression table.
sig <- data.frame()
for(i in 1:length(summary(prep)$tables)){
sig <- rbind(sig,data.frame(topic=frex[i],shorttopic=labeled.topics[i],t(tabs[[i]][2,])))
}
names(sig) <- c("topic","shorttopic","coefficient","stderr","t","p")
sig <- sig[order(sig$coefficient),]
View(sig)
View(tabs)
sig$coefficient
view("sig")
# 1. Open jpeg file
jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, eval = TRUE)
#use eval = FALSE for just knitting
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, eval = FALSE)
#use eval = FALSE for just knitting
# Step 1: Estimate topics and prevalence from abstracts as a function of binary gender,
# controlling for school and year
K <- 61
fit <- stm(out$documents, out$vocab, K = K,
prevalence =~ woman.strict+as.factor(School)+s(year), max.em.its = 100,
data = meta, init.type = "Spectral")
# 5. Setting up the STM
meta <-out$meta
# Step 1: Estimate topics and prevalence from abstracts as a function of binary gender,
# controlling for school and year
K <- 61
fit <- stm(out$documents, out$vocab, K = K,
prevalence =~ woman.strict+as.factor(School)+s(year), max.em.its = 100,
data = meta, init.type = "Spectral")
# Step 1: Estimate topics and prevalence from abstracts as a function of binary gender,
# controlling for school and year
K <- 61
fit <- stm(out$documents, out$vocab, K = K,
prevalence =~ woman.strict+as.factor(School)+s(year), max.em.its = 100,
data = meta, init.type = "Spectral")
#Monica inserted code to make sure that stm object "fit" contains the same topics as
#file output-for-figure.csv: Yes.
summary(fit)
summary(head(fit))
fit_frex <- summary(fit)$frex
# These are the labels we assigned to the topics on the basis of the frex (Frequent-Exclusive) words from the model.
# The topics themselves are just our shorthand, and people can interpret the topics any way they'd like (within reason).
# labeled.topics <- read.csv("frex-8-24.csv",stringsAsFactors=F)
labeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
labeled.topics <- labeled.topics$label
# MP my file (2 columns) and theirs (8 columns) differ in structure, it will create a different sort
#MPlabeled.topics <- read.csv(here("data", "Rep_frex-8-24.csv"), stringsAsFactors=F)
#MPlabeled.topics <- MPlabeled.topics$label
# # If you rerun the model, check to make sure the order still lines up -- it should, but if it doesn't, need to reorder
#summary(fit)$frex==labeled.topics[,2:8]s
frex <- apply(summary(fit)$frex,1,paste0,collapse=",")
# Runs a series of linear regressions.
#  prep <- estimateEffect(1:length(subfields) ~ woman.strict+as.factor(School)+s(year), fit,
prep <- estimateEffect(  ~ woman.strict+as.factor(School)+s(year), fit,
meta = out$meta, uncertainty = "Global")
# Extracts the regression tables.
tabs <- summary(prep)$tables
# Extracts the coefficient for "woman" from each regression table.
sig <- data.frame()
for(i in 1:length(summary(prep)$tables)){
sig <- rbind(sig,data.frame(topic=frex[i],shorttopic=labeled.topics[i],t(tabs[[i]][2,])))
}
names(sig) <- c("topic","shorttopic","coefficient","stderr","t","p")
sig <- sig[order(sig$coefficient),]
# 1. Open jpeg file
jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
# 1. Open jpeg file
#jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
# 1. Open jpeg file
#jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
# 1. Open jpeg file
#jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
# 1. Open jpeg file
#jpeg(here("output", "newFigure1.jpg"))
# Plot
par(mar=c(3,16,2,1))
plot(sig$coefficient,c(1:length(sig$coefficient)),yaxt="n",pch=16,xlab="more likely among men                           more likely among women",ylab="",
main="Gendered Topic Prevalences",xlim=c(-.02,.02),bty="n",xaxt="n",col=col,type="n")
segments(y0=c(1:K),x0=-.03,x1=.02,lty=3,col="red")
points(sig$coefficient,c(1:length(sig$coefficient)),pch=16)
axis(1,at=c(-0.015,0,0.015),c("more prevalent among men","equal","more prevalent among women"))
segments(x0=sig$coefficient-1.96*sig$stderr,x1=sig$coefficient+1.96*sig$stderr,
y0=c(1:length(sig$coefficient)))
segments(y0=0,y1=length(sig$coefficient),x0=0,lty=2)
axis(2,at=c(1:length(sig$coefficient)),sig$shorttopic,las=2,cex.axis=.8)
# end of Research file
getwd()
wordcountaddin::word_count(source/Repl_ResearchLikeGirl.Rmd)
wordcountaddin::word_count(./source/Repl_ResearchLikeGirl.Rmd)
wordcountaddin::word_count(../source/Repl_ResearchLikeGirl.Rmd).
wordcountaddin::word_count(../source/Repl_ResearchLikeGirl.Rmd)
wordcountaddin::word_count("source/Repl_ResearchLikeGirl.Rmd")
#install.packages(c("here", "remotes"))
#remotes::install_github("benmarwick/wordcountaddin")
#wordcountaddin::word_count("source/Repl_plot-file.Rmd")
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
View(fit)
View(fit)
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
wordcountaddin::word_count((here("source", "Repl_ResearchLikeGirl.Rmd")))
# Figure A2 in Supplementary Online Appendices
barplot(t(table(diss$year,diss$woman.strict)), col = c("lightblue", "mistyrose",
"lightcyan", "lavender"), legend.text=c("Man","Woman"),
main="Dissertations Filed With Proquest Per Year\nand Gender",ylim=c(0,250),
border = "dark blue")
